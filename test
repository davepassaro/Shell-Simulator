i=0;
    while(cmds[i]!= NULL){///cite guidence from https://www.geeksforgeeks.org/c-program-replace-word-text-another-given-word/
      char *target ="$$";
      char *p;
      int w=0;
      int count=0;
      int subLen = strlen(target);
      int oldLen = strlen(cmds[i]);
      for (w=0;cmds[w]!=0;w++){
        if(strstr(&cmds[i][w],target)){
          count++;
        }
      }
     // p= (strstr(cmds[i],target))
      char string [100];
      memset(string,'\0',100);
      int q = 0;
   // printf( "   %s 2   ",cmds[0]);fflush(stdout);

      strcpy(string, cmds[i]);//copy over original 
   // printf( "   %s 3  ",string);fflush(stdout);
      memset(cmds[i],'\0',100);//clear for result building
      //printf("1st  %s cmds  ",cmds[i]);fflush(stdout);

      char  pidstr [100];
      snprintf(pidstr,100,"%d",getpid());
      //printf("   %s   pstr   ",pidstr);
      int pLen = strlen(pidstr); 
      int counterFirst$$ = 0;
      w=0;
      char *ptr=&string;
      while(string[q]){
        //printf(" start q=%c ",string[q]);fflush(stdout);
        //printf(" 0(w=%d   q =%d, cmds=%s)   ",w,q,cmds[i]);fflush(stdout);

        if(strstr(string,target)== ptr && counterFirst$$==0)//beginning is substring
        {
          //printf(" 1 i=%d w=%d cmdsiw %s ",i,w,cmds[i]);fflush(stdout);
         //printf(" 1  ");fflush(stdout);

          strcpy(&cmds[i][w],pidstr);//put in result at front
          w += pLen;
          q += 2;
          //count--;
         // printf(" 1( cmds=%s)   ",w,q,cmds[i]);fflush(stdout);
          //break;
          counterFirst$$++;
        }
        
        else{
         //printf(" 2  ");fflush(stdout);

          p=(strstr(&string[q],target));
         // printf(" p= %c  ",*p);fflush(stdout);

          if(p && (*(p+1)=='$') && (p == (&string[q]))){
          printf(" 2  ");fflush(stdout);
            strcat(cmds[i],pidstr);
            q += 2;
            w += pLen;
           // printf(" 3 cmds= %s  ",cmds[0]);fflush(stdout);

          }
          else{
          //printf("   3  ");fflush(stdout);

          cmds[i][w++] = string[q++];//else copy the char
          }
        }
        //printf("    %c = c     ",cmds[i][w]);fflush(stdout);
      }
     // cmds[i][w]='\0';
     // printf("  %s cmds  ",cmds[i]);fflush(stdout);
     // if(p){

      //}
      i++;
    }